{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarverServices.js","hooks/http.hook.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/comicsList/ComicsList.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/pages/MainPage.js","components/singleComic/SingleComic.js","components/pages/404.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","style","color","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","x","y","rx","ry","fill","attributeName","values","keyTimes","dur","begin","repeatCount","ErrorMessage","objectFit","src","img","alt","ComicsList","props","comicsList","setComics","newItemLoading","setTimeLoad","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsLoaded","newcomicslist","ended","length","itemsRef","useRef","arr","item","i","tabIndex","ref","el","current","onClick","onComicsSelected","onKeyPress","e","key","ComicsSelected","renderItems","errorMessage","spinner","disabled","View","imgStyle","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","content","mjolnir","CharList","charList","setCharList","charEnded","setCharEnded","onCharListLoaded","newcharList","charlist","focusOnItem","forEach","classList","remove","add","focus","onCharSelected","ErrorBoundary","state","err","info","this","setState","prop","children","Component","Skeleton","CharInfo","charId","skeleton","MainPage","selectedChar","decoration","SingleComic","updateComics","comicsId","Page404","App","selectedComics","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAuBeA,EApBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,eAAC,IAAD,CAAOC,GAAG,IAAV,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,cAAC,IAAD,CAAUE,MAAO,kBAAe,CAACC,MAAhB,EAAEC,SAA+B,UAAY,UAAWH,GAAG,IAA5E,0BADR,IAGI,6BAAI,cAAC,IAAD,CAAUC,MAAO,kBAAe,CAACC,MAAhB,EAAEC,SAA+B,UAAY,UAAWH,GAAG,UAA5E,+B,8BCgDTI,EA5DU,WAErB,MCHmB,WAEnB,MAAqCC,oBAAS,GAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAqCF,mBAAS,MAA9C,mBAAOG,EAAP,KAAaC,EAAb,KA6BA,MAAO,CAACH,UAAQI,QA3BAC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAWC,EAAX,+BAAoB,MAAMC,EAA1B,+BAAiC,KAAKC,EAAtC,+BAAgD,CAAC,eAAe,oBAExFT,GAAW,GAFa,kBAKGU,MAAML,EAAI,CAACE,SAAOC,OAAKC,YAL1B,WAKdE,EALc,QAOPC,GAPO,uBAQV,IAAIC,MAAJ,wBAA2BR,EAA3B,mBAAyCM,EAASG,SARxC,yBAWDH,EAASI,OAXR,eAWdC,EAXc,OAapBhB,GAAW,GAbS,kBAebgB,GAfa,wCAkBpBhB,GAAW,GACXE,EAAS,KAAEe,SAnBS,+DAAD,sDAuBzB,IAIsBhB,QAAMiB,WAFXd,uBAAY,kBAAKF,EAAS,QAAM,KD3BRiB,GAApCpB,EAAP,EAAOA,QAAQI,EAAf,EAAeA,QAAQF,EAAvB,EAAuBA,MAAMiB,EAA7B,EAA6BA,WAEvBE,EAAW,4CACXC,EAAW,0CAIVC,EAAgB,uCAAG,0CAAAhB,EAAA,6DAAOiB,EAAP,+BAHN,IAGM,SACJpB,EAAQ,GAAD,OAAIiB,EAAJ,qCAAyCG,EAAzC,YAAmDF,IADtD,cAChBG,EADgB,yBAEfA,EAAIR,KAAKS,QAAQC,IAAIC,IAFN,2CAAH,qDAKjBC,EAAY,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACCH,EAAQ,GAAD,OAAIiB,EAAJ,uBAA2BS,EAA3B,YAAiCR,IADzC,cACXG,EADW,yBAEVG,EAAoBH,EAAIR,KAAKS,QAAQ,KAF3B,2CAAH,sDAMZK,EAAY,uCAAG,0CAAAxB,EAAA,6DAAOiB,EAAP,+BAAgB,EAAhB,SACCpB,EAAQ,GAAD,OAAIiB,EAAJ,qDAAyDG,EAAzD,YAAmEF,IAD3E,cACXG,EADW,yBAEVA,EAAIR,KAAKS,QAAQC,IAAIK,IAFX,2CAAH,qDAKZC,EAAS,uCAAG,WAAOH,GAAP,eAAAvB,EAAA,sEACIH,EAAQ,GAAD,OAAIiB,EAAJ,kBAAsBS,EAAtB,YAA4BR,IADvC,cACRG,EADQ,yBAEPO,EAAiBP,EAAIR,KAAKS,QAAQ,KAF3B,2CAAH,sDAKVE,EAAsB,SAACM,GACxB,MAAO,CACHJ,GAAYI,EAAKJ,GACjBK,KAAYD,EAAKC,KACjBC,YAAYF,EAAKE,YAAL,UAAsBF,EAAKE,YAAYC,MAAM,EAAG,KAAhD,OAA4D,0BACxEC,UAAYJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACvDC,SAAYP,EAAKQ,KAAK,GAAGpC,IACzBqC,KAAYT,EAAKQ,KAAK,GAAGpC,IACzBsC,OAAYV,EAAKU,OAAOC,QAI1Bb,EAAmB,SAACY,GACtB,MAAM,CACFd,GAAcc,EAAOd,GACrBgB,MAAcF,EAAOE,MACrBV,YAAcQ,EAAOR,aAAe,0BACpCW,UAAcH,EAAOG,UAAP,UAAsBH,EAAOG,UAA7B,OAA8C,2CAC5DT,UAAcM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC7DQ,SAAcJ,EAAOK,YAAYD,UAAY,QAC7CE,MAAcN,EAAOO,OAAO,GAAGD,MAAjB,UAA4BN,EAAOO,OAAO,GAAGD,MAA7C,KAAwD,kBAO9E,MAAO,CAAClD,UAAQE,QAAM2B,eAAaN,mBAAiBJ,aAAWY,eAAaE,cEgCjEmB,EA5FC,WACZ,OACI,sBAAKC,MAAM,6BAA6B1D,MAAO,CAAC2D,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACA,mBAAGC,UAAU,kBAAb,SACE,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,uBAAuBC,YAAY,mBAEhI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,kCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,uBAAuBC,YAAY,mBAEhI,mBAAGX,UAAU,kCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,kCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,oBAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,uBAAuBC,YAAY,mBAEhI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,oBAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,kCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,kCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,wBAAwBC,YAAY,mBAEjI,mBAAGX,UAAU,mCAAb,SACF,sBAAMC,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,IAAIC,OAAO,KAAKQ,KAAK,UAA/D,SACE,yBAASC,cAAc,UAAUC,OAAO,MAAMC,SAAS,MAAMC,IAAI,sBAAsBC,MAAM,KAAKC,YAAY,uBCrF3G,MAA0B,kCCO1BC,EALM,WACjB,OACI,qBAAK9E,MAAO,CAAC6D,QAAS,QAASC,MAAO,QAAQC,OAAQ,QAAQgB,UAAU,UAAUpB,OAAO,UAAWqB,IAAKC,EAAKC,IAAI,mBC2G3GC,G,MApGI,SAACC,GAEhB,MAAqChF,mBAAS,IAA9C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAAqClF,oBAAS,GAA9C,mBAAOmF,EAAP,KAAsBC,EAAtB,KACA,EAAqCpF,mBAAS,GAA9C,mBAAOyB,EAAP,KAAc4D,EAAd,KACA,EAAqCrF,oBAAS,GAA9C,mBAAOsF,EAAP,KAAmBC,EAAnB,KAGA,EAAqCxF,IAA9BE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM6B,EAArB,EAAqBA,aAErBwD,qBAAU,WACNC,EAAUhE,GAAO,KACnB,IAGF,IAAMgE,EAAY,SAAChE,EAAOiE,GACZN,GAAVM,GACA1D,EAAaP,GACZkE,KAAKC,IAGJA,EAAiB,SAACC,GAEpB,IAAIC,GAAQ,EACTD,EAAcE,OAAS,IACtBD,GAAQ,GAGZZ,EAAU,GAAD,mBAAKD,GAAL,YAAoBY,KAC7BT,GAAY,GACZC,EAAU5D,EAAS,GACnB8D,EAAeO,IAIbE,EAAWC,iBAAO,IAuCxB,IAAMnD,EAlCN,SAAqBoD,GAEjB,IAAMpD,EAASoD,EAAItE,KAAI,SAACuE,EAAKC,GAExB,OACG,oBAAK1G,UAAU,eAEf2G,SAAU,EACVC,IAAK,SAAAC,GAAE,OAAIP,EAASQ,QAAQJ,GAAKG,GACjCE,QAAS,WACNzB,EAAM0B,iBAAiBP,EAAKpE,KAE/B4E,WAAY,SAACC,GACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,KAClB7B,EAAM8B,eAAeX,EAAKpE,KATjC,SAYI,eAAC,IAAD,CAAOpC,GAAG,UAAV,UACI,qBAAKiF,IAAKuB,EAAK5D,UAAWuC,IAAKqB,EAAKpD,MAAOrD,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCyG,EAAKpD,QACzC,qBAAKrD,UAAU,qBAAf,SAAqCyG,EAAKhD,YAd7CiD,MAoBb,OACI,oBAAI1G,UAAU,eAAd,SACKoD,IAMoBiE,CAAY9B,GACvC+B,EAA2B7G,EAAQ,cAAC,EAAD,IAAkB,KACrD8G,EAA2BhH,IAAYkF,EAAiB,cAAC,EAAD,IAAa,KAGvE,OACI,sBAAKzF,UAAU,eAAf,UACKsH,EACAC,EACAnE,EACL,wBACIoE,SAAU/B,EACVvF,MAAO,CAAC,QAAY0F,EAAc,OAAS,SAC3C5F,UAAU,mCACV+G,QAAS,kBAAMhB,EAAUhE,IAJ7B,SAKI,qBAAK/B,UAAU,QAAf,8BCpGD,G,MAAA,IAA0B,qCCmEnCyH,EAAO,SAAC,GAAY,IAAXhF,EAAU,EAAVA,KAERC,EAA4CD,EAA5CC,KAAKC,EAAuCF,EAAvCE,YAAYK,EAA2BP,EAA3BO,SAASH,EAAkBJ,EAAlBI,UAAUK,EAAQT,EAARS,KAEvCwE,EAAW,CAAC,UAAc,SAO1B,MALa,wEAAd7E,IACC6E,EAAW,CAAC,UAAY,YAKxB,sBAAK1H,UAAU,oBAAf,UACI,qBAAKkF,IAAKrC,EAAW3C,MAAOwH,EAAUtC,IAAI,mBAAmBpF,UAAU,oBACvE,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiC0C,IACjC,mBAAG1C,UAAU,oBAAb,SACK2C,IAEL,sBAAK3C,UAAU,mBAAf,UACI,mBAAG2H,KAAM3E,EAAUhD,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAG2H,KAAMzE,EAAMlD,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQL4H,EA3FI,WAEf,MAAuBtH,mBAAS,IAAhC,mBAAOmC,EAAP,KAAYoF,EAAZ,KAED,EAAgDxH,IAAzCE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM2B,EAArB,EAAqBA,aAAaV,EAAlC,EAAkCA,WAGjCoE,qBAAU,WACNgC,IAEA,IAAMC,EAAUC,YAAYF,EAAY,KAExC,OAAO,WAAOG,cAAcF,MAC9B,IAEH,IAAMG,EAAe,SAACzF,GACjBoF,EAAQpF,IAKNqF,EAAa,WACfpG,IACA,IAAMW,EAAK8F,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QACxDjG,EAAaC,GACZ4D,KAAKiC,IAMRZ,EAAuB7G,EAAQ,cAAC,EAAD,IAAkB,KACjD8G,EAAuBhH,EAAU,cAAC,EAAD,IAAa,KAC9C+H,EAAyB/H,GAAWE,IAAUgC,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAGpE,OACI,sBAAKzC,UAAU,aAAf,UACKsH,EACAC,EACAe,EACD,sBAAKtI,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQ+G,QAASe,EAAY9H,UAAU,sBAAvC,SACI,qBAAKA,UAAU,QAAf,sBAEJ,qBAAKkF,IAAKqD,EAASnD,IAAI,UAAUpF,UAAU,kCCwEhDwI,G,MA7HE,SAAClD,GAEd,MAAqChF,mBAAS,IAA9C,mBAAOmI,EAAP,KAAgBC,EAAhB,KACA,EAAqCpI,oBAAS,GAA9C,mBAAOmF,EAAP,KAAsBC,EAAtB,KACA,EAAqCpF,mBAAS,KAA9C,mBAAOyB,EAAP,KAAc4D,EAAd,KACA,EAAqCrF,oBAAS,GAA9C,mBAAOqI,EAAP,KAAiBC,EAAjB,KAIA,EAAyCvI,IAAlCE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAMqB,EAArB,EAAqBA,iBAGtBgE,qBAAU,WACLC,EAAUhE,GAAO,KACnB,IAGH,IAAMgE,EAAY,SAAChE,EAAOiE,GACXN,GAAVM,GACAlE,EAAiBC,GAChBkE,KAAK4C,IAOLA,EAAmB,SAACC,GAErB,IAAI1C,GAAQ,EACT0C,EAAYzC,OAAS,IACpBD,GAAQ,GAGZsC,GAAY,SAAAK,GAAQ,4BAAQN,GAAR,YAAqBK,OACzCpD,GAAY,SAAAD,GAAc,OAAI,KAC9BE,GAAU,SAAA5D,GAAM,OAAIA,EAAS,KAC7B6G,GAAa,SAAAD,GAAS,OAAIvC,MAKxBE,EAAWC,iBAAO,IAGnByC,EAAc,SAAC3G,GAChBiE,EAASQ,QAAQmC,SAAQ,SAAAxC,GAAI,OAAIA,EAAKyC,UAAUC,OAAO,0BACvD7C,EAASQ,QAAQzE,GAAI6G,UAAUE,IAAI,uBACnC9C,EAASQ,QAAQzE,GAAIgH,SAiDzB,IAAMjG,EA5CP,SAAqBoD,GAChB,IAAMpD,EAASoD,EAAItE,KAAI,SAACuE,EAAKC,GACzB,IAAIgB,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBjB,EAAK5D,YACL6E,EAAW,CAAC,UAAc,UAI1B,qBAAK1H,UAAU,aAEV2G,SAAU,EACVC,IAAK,SAAAC,GAAE,OAAIP,EAASQ,QAAQJ,GAAKG,GACjCE,QAAS,WACNzB,EAAMgE,eAAe7C,EAAKpE,IAC1B2G,EAAYtC,IAEfO,WAAY,SAACC,GACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MAClB7B,EAAMgE,eAAe7C,EAAKpE,IAC1B2G,EAAYtC,KAXxB,UAgBQ,qBAAKxB,IAAKuB,EAAK5D,UAAWuC,IAAKqB,EAAK/D,KAAMxC,MAAOwH,IACjD,qBAAK1H,UAAU,aAAf,SAA6ByG,EAAK/D,SAhBhC+D,EAAKpE,OAuBvB,OACI,oBAAIrC,UAAU,aAAd,SACKoD,IAUoBiE,CAAYoB,GACvCnB,EAA2B7G,EAAQ,cAAC,EAAD,IAAkB,KACrD8G,EAA2BhH,IAAYkF,EAAiB,cAAC,EAAD,IAAa,KAGvE,OACI,sBAAKzF,UAAU,aAAf,UACSsH,EACAC,EACAnE,EACL,wBACApD,UAAU,mCACVwH,SAAU/B,EACVvF,MAAO,CAAC,QAAUyI,EAAY,OAAS,SACvC5B,QAAS,kBAAKhB,EAAUhE,IAJxB,SAMI,qBAAK/B,UAAU,QAAf,8B,gCC/FLuJ,E,4MApBXC,MAAQ,CACJ/I,OAAM,G,uDAGV,SAAkBgJ,EAAIC,GAClBC,KAAKC,SAAS,CACVnJ,OAAM,M,oBAId,WACI,OAAGkJ,KAAKH,MAAMK,KACH,cAAC,EAAD,IAEJF,KAAKrE,MAAMwE,a,GAhBEC,aCHb,MAA0B,mCCmB1BC,G,MAjBE,WACb,OACI,qCACI,mBAAGhK,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCyCzByH,G,MAAO,SAAC,GAAY,IAAXhF,EAAU,EAAVA,KAEJC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OAEjDuE,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAd7E,IACA6E,EAAW,CAAC,UAAc,YAI1B,qCACK,sBAAK1H,UAAU,eAAf,UACG,qBAAKkF,IAAKrC,EAAWuC,IAAK1C,EAAMxC,MAAOwH,IACvC,gCACI,qBAAK1H,UAAU,kBAAf,SAAkC0C,IAClC,sBAAK1C,UAAU,aAAf,UACI,mBAAG2H,KAAM3E,EAAUhD,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAG2H,KAAMzE,EAAMlD,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACK2C,IAEL,qBAAK3C,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKmD,EAAOkD,OAAS,EAAI,KAAO,yCAGxBlD,EAAOjB,KAAI,SAACuE,EAAKC,GAEb,KAAGA,EAAI,GAEP,OACI,oBAAY1G,UAAU,oBAAtB,SACKyG,EAAK/D,MADDgE,cAkBtBuD,EArGE,SAAC3E,GAEd,MAAuBhF,mBAAS,MAAhC,mBAAOmC,EAAP,KAAYoF,EAAZ,KAEA,EAAgDxH,IAAzCE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM2B,EAArB,EAAqBA,aAAaV,EAAlC,EAAkCA,WAElCoE,qBAAU,WACNgC,MACF,CAACxC,EAAM4E,SAET,IAAMpC,EAAa,WAEf,IAAOoC,EAAU5E,EAAV4E,OAEFA,IAGLxI,IACAU,EAAa8H,GACRjE,KAAKiC,KAKRA,EAAe,SAACzF,GAClBoF,EAAQpF,IAIN0H,EAAe1H,GAAQlC,GAAWE,EAAQ,KAAO,cAAC,EAAD,IACjD6G,EAAe7G,EAAQ,cAAC,EAAD,IAAkB,KACzC8G,EAAehH,EAAU,cAAC,EAAD,IAAa,KACtC+H,EAAiB/H,GAAWE,IAAUgC,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAEhE,OACI,sBAAKzC,UAAU,aAAf,UACImK,EACA7C,EACAC,EACAe,MCfG8B,EA1BE,WAEb,MAA+B9J,mBAAS,MAAxC,mBAAO+J,EAAP,KAAoBxC,EAApB,KAMA,OACI,qCACA,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,sBAAK7H,UAAU,gBAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUsJ,eAXC,SAACjH,GAEpBwF,EAAQxF,QAWJ,cAAC,EAAD,UACY,cAAC,EAAD,CAAU6H,OAAQG,SAGlC,qBAAKrK,UAAU,gBAAgBkF,IAAKoF,EAAYlF,IAAI,eC4BlDqC,G,MAAO,SAAC,GAAc,IAAbtE,EAAY,EAAZA,OAEJE,EAA6DF,EAA7DE,MAAOV,EAAsDQ,EAAtDR,YAAaE,EAAyCM,EAAzCN,UAAWU,EAA8BJ,EAA9BI,SAAUE,EAAoBN,EAApBM,MAAOH,EAAaH,EAAbG,UAGvD,OACI,mCAEA,sBAAKtD,UAAU,eAAf,UACQ,qBAAKkF,IAAKrC,EAAWuC,IAAK/B,EAAOrD,UAAU,iBAC3C,sBAAKA,UAAU,qBAAf,UACA,oBAAIA,UAAU,qBAAd,SAAoCqD,IAChC,mBAAGrD,UAAU,sBAAb,SAAoC2C,IACpC,mBAAG3C,UAAU,sBAAb,SAAoCsD,IACpC,mBAAGtD,UAAU,sBAAb,SAAoCuD,IACxC,qBAAKvD,UAAU,sBAAf,SAAsCyD,OAEtC,cAAC,IAAD,CAAOxD,GAAG,UAAUD,UAAU,qBAA9B,gCAWLuK,EA1EK,SAACjF,GAEjB,MAA2BhF,mBAAS,MAApC,mBAAO6C,EAAP,KAAcqC,EAAd,KAEA,EAA6CnF,IAAtCE,EAAP,EAAOA,QAAQE,EAAf,EAAeA,MAAM+B,EAArB,EAAqBA,UAAUd,EAA/B,EAA+BA,WAG/BoE,qBAAU,WACN0E,MACF,CAAClF,EAAMmF,WAGT,IAAMD,EAAe,WAEjB,IAAOC,EAAYnF,EAAZmF,SAEFA,IAGL/I,IACAc,EAAUiI,GACLxE,KAAKC,KAIRA,EAAiB,SAAC/C,GACpBqC,EAAUrC,IAKRmE,EAAe7G,EAAQ,cAAC,EAAD,IAAkB,KACzC8G,EAAehH,EAAU,cAAC,EAAD,IAAa,KACtC+H,EAAiB/H,GAAWE,IAAU0C,EAAqC,KAA3B,cAAC,EAAD,CAAMA,OAAQA,IAIpE,OACI,sBAAKnD,UAAU,eAAf,UACIsH,EACAC,EACAe,MCvCGoC,EAVC,WACZ,OACI,gCACI,cAAC,EAAD,IACA,mBAAGxK,MAAO,CAAC,UAAY,SAAS,WAAa,OAAO,SAAW,QAA/D,gCACA,cAAC,IAAD,CAAOD,GAAG,IAAIC,MAAO,CAAC,QAAU,QAAQ,UAAY,SAAS,WAAa,OAAO,SAAW,OAAO,UAAY,QAA/G,mCCuCGyK,EAvCH,WAER,MAAmCrK,mBAAS,MAA5C,mBAAOsK,EAAP,KAAsBpF,EAAtB,KASA,OACA,cAAC,IAAD,UACI,sBAAKxF,UAAU,MAAf,UACI,cAAC,EAAD,IACA,+BACG,eAAC,IAAD,WAEP,cAAC,IAAD,CAAQ8C,KAAK,IAAI+H,QAAS,cAAC,EAAD,MAE1B,cAAC,IAAD,CAAQ/H,KAAK,UAAU+H,QAAS,cAAC,EAAD,CAAY7D,iBAfvB,SAAC3E,GAEtBmD,EAAUnD,QAeV,cAAC,IAAD,CAAQS,KAAK,UAAU+H,QAAS,cAAC,EAAD,CAAaJ,SAAUG,MAEvD,cAAC,IAAD,CAAO9H,KAAK,IAAI+H,QAAS,cAAC,EAAD,iB,MCxBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d5f92e2.chunk.js","sourcesContent":["import './appHeader.scss';\nimport {Link,NavLink} from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link  to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink  style={({isActive})=>({color:isActive ? '#9f0013' : 'black'})} to=\"/\">Characters</NavLink></li>\n                    / \n                    <li><NavLink  style={({isActive})=>({color:isActive ? '#9f0013' : 'black'})} to=\"/comics\">Comics</NavLink></li>\n                    \n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { useHttp } from \"../hooks/http.hook\";\n\n\nconst useMarvelService = () => {\n\n    const {loading,request,error,clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey  = 'apikey=1a6c1d416196cfc7b1d4c4be9a968bd5';\n    const _baseOffset = 210;\n\n    \n     const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n   const _transformCharacter = (char) => {\n        return {\n            id         :char.id,\n            name       :char.name,\n            description:char.description ? `${char.description.slice(0, 210)}...` : 'There is no description',\n            thumbnail  :char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage   :char.urls[0].url,\n            wiki       :char.urls[1].url,\n            comics     :char.comics.items,\n        };\n    }\n\n    const _transformComics = (comics) => {\n        return{\n            id          : comics.id,\n            title       : comics.title,\n            description : comics.description || 'There is no description',\n            pageCount   : comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            thumbnail   : comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language    : comics.textObjects.language || 'en-us',\n            price       : comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\n        }\n    }\n\n   \n\n\n    return {loading,error,getCharacter,getAllCharacters,clearError,getAllComics,getComics}\n}\n\nexport default useMarvelService;\n\n","import { useCallback,useState } from \"react\";\n\nexport const useHttp = () => {\n\n    const [loading,setLoading]         = useState(false);\n    const [error,setError]             = useState(null);\n\n    const request = useCallback(async (url,method = 'GET',body = null,headers = {'Content-Type':'Application/json'})=>{\n\n        setLoading(true);\n\n        try{\n            const response = await fetch(url,{method,body,headers});\n\n            if(!response.ok){\n                throw new Error(`Couldnt fetch ${url},status:${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            \n            return data;\n        }catch(e){\n\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    },[])\n\n    const clearError = useCallback(()=> setError(null),[])\n\n    return {loading,request,error,clearError}\n\n}","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n        <g transform=\"rotate(0 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.4052684903748734s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(17.142857142857142 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.38500506585612976s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(34.285714285714285 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.36474164133738607s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(51.42857142857143 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.3444782168186424s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(68.57142857142857 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.32421479229989875s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(85.71428571428571 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.30395136778115506s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(102.85714285714286 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.28368794326241137s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(120 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.26342451874366773s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(137.14285714285714 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.24316109422492405s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(154.28571428571428 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.22289766970618036s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(171.42857142857142 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.2026342451874367s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(188.57142857142858 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.18237082066869303s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(205.71428571428572 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.16210739614994937s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(222.85714285714286 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.14184397163120568s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(240 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.12158054711246202s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(257.14285714285717 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.10131712259371835s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(274.2857142857143 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.08105369807497469s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(291.42857142857144 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.06079027355623101s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(308.57142857142856 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.04052684903748734s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(325.7142857142857 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#fe718d\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"-0.02026342451874367s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(342.85714285714283 50 50)\">\n          <rect x=\"49.5\" y=\"24\" rx=\"0\" ry=\"0\" width=\"1\" height=\"12\" fill=\"#05bcef\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"0.4255319148936171s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: \"block\", width: \"250px\",height: \"250px\",objectFit:'contain',margin:'0 auto'}} src={img} alt=\"Error Message\" />\n    )\n}\nexport default ErrorMessage;","import useMarvelService      from '../../services/MarverServices';\nimport Spinner               from '../spinner/spinner';\nimport ErrorMessage          from '../errorMessage/errorMessage';\nimport React,{useState,useEffect ,useRef} from 'react';\nimport PropTypes             from 'prop-types';\nimport {Link}                from 'react-router-dom';\n\n\n\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\n    const [comicsList,setComics]       = useState([]);\n    const [newItemLoading,setTimeLoad] = useState(false);\n    const [offset,setOffset]           = useState(0);\n    const [comicsEnded,setComicsEnded] = useState(false); \n    \n\n    const {loading,error,getAllComics} = useMarvelService();\n\n    useEffect(()=>{\n        onRequest(offset,true);\n    },[])\n\n\n    const onRequest = (offset,initial) => {\n        initial ? setTimeLoad(false) : setTimeLoad(true);\n        getAllComics(offset)\n        .then(onComicsLoaded);\n    }\n\n    const onComicsLoaded = (newcomicslist) => {\n\n        let ended = false;\n        if(newcomicslist.length < 8){\n            ended = true;\n        }\n\n        setComics([...comicsList, ...newcomicslist]);\n        setTimeLoad(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n\n    const itemsRef = useRef([]);\n\n\n  \n\n    function renderItems(arr) {\n\n        const items =  arr.map((item,i) => {\n\n             return (\n                <li  className=\"comics__item\" \n                key={i} \n                tabIndex={0}\n                ref={el => itemsRef.current[i] = el}\n                onClick={()=>{\n                   props.onComicsSelected(item.id);\n                }}\n                onKeyPress={(e)=>{\n                   if(e.key === ' ' || e.key === 'Enter'){\n                       props.ComicsSelected(item.id);\n                   }\n                }} >\n                    <Link  to=\"/single\">\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    const items                    = renderItems(comicsList);\n    const errorMessage             = error ? <ErrorMessage/> : null;\n    const spinner                  = loading && !newItemLoading ? <Spinner/> : null;\n\n\n        return (\n            <div className=\"comics__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n        )\n\n}\nComicsList.propTypes = {\n    onComicsSelected:PropTypes.func.isRequired\n}\n\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import useMarvelService from '../../services/MarverServices';\nimport Spinner       from '../spinner/spinner';\nimport ErrorMessage  from '../errorMessage/errorMessage';\nimport {useState,useEffect}   from 'react';\nimport './randomChar.scss';\nimport mjolnir       from '../../resources/img/mjolnir.png';\n\n\nconst RandomChar = () => {\n\n    const [char,setChar] = useState({});\n\n   const {loading,error,getCharacter,clearError} = useMarvelService();\n\n    \n    useEffect(()=>{\n        updateChar();\n        \n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {clearInterval(timerId)};\n    },[])\n    \n   const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n   \n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //формула чтобы найти айди от меньшего до большего\n            getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    \n\n   \n    const errorMessage         = error ? <ErrorMessage/> : null;\n    const spinner              = loading ? <Spinner/> : null;\n    const content              = !(loading || error || !char) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n\n\nconst View = ({char}) => {\n\nconst {name,description,homepage,thumbnail,wiki} = char;\n\nlet imgStyle = {'objectFit' : 'Cover'};\n\nif(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n    imgStyle = {'objectFit':'Contain'};\n}\n\n\n    return ( \n    <div className=\"randomchar__block\">\n        <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default RandomChar;\n\n\n","import './charList.scss';\nimport React,{useState,useEffect ,useRef} from 'react';\nimport Spinner       from '../spinner/spinner';\nimport ErrorMessage  from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarverServices';\nimport PropTypes     from 'prop-types'\n\nconst CharList = (props) => {\n\n    const [charList,setCharList]       = useState([]);\n    const [newItemLoading,setTimeLoad] = useState(false);\n    const [offset,setOffset]           = useState(210);\n    const [charEnded,setCharEnded]     = useState(false); \n\n    \n\n    const {loading,error,getAllCharacters} = useMarvelService();\n\n\n   useEffect(()=>{\n        onRequest(offset,true);\n   }, [])\n\n\n   const onRequest = (offset,initial) => {\n        initial ? setTimeLoad(false) : setTimeLoad(true);\n        getAllCharacters(offset)\n        .then(onCharListLoaded);\n    }\n\n   \n\n   \n\n   const onCharListLoaded = (newcharList) => {\n\n        let ended = false;\n        if(newcharList.length < 9){\n            ended = true;\n        }\n\n        setCharList(charlist => [...charList, ...newcharList]);\n        setTimeLoad(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n   \n\n    const itemsRef = useRef([]);\n\n\n   const focusOnItem = (id) => {\n        itemsRef.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemsRef.current[id].classList.add('char__item_selected');\n        itemsRef.current[id].focus();\n    }\n\n\n\n   function renderItems(arr) {\n        const items =  arr.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li  className=\"char__item\"\n                     key={item.id}\n                     tabIndex={0}\n                     ref={el => itemsRef.current[i] = el}\n                     onClick={()=>{\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                     }}\n                     onKeyPress={(e)=>{\n                        if(e.key === ' ' || e.key === 'Enter'){\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                     }}\n                    >\n\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n                \n            )\n            \n        });\n        \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    \n\n\n\n    \n    const items                    = renderItems(charList);\n    const errorMessage             = error ? <ErrorMessage/> : null;\n    const spinner                  = loading && !newItemLoading ? <Spinner/> : null;\n\n\n        return (\n            <div className=\"char__list\">\n                    {errorMessage}\n                    {spinner}\n                    {items}\n                <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display':charEnded ? 'none' : 'block'}}\n                onClick={()=> onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n\n}\n\nCharList.propTypes = {\n    onCharSelected:PropTypes.func.isRequired\n}\n\n\nexport default CharList;\n","import { Component } from \"react\";\nimport ErrorMessage  from \"../errorMessage/errorMessage\";\n\nclass ErrorBoundary extends Component{\n\n    state = {\n        error:false,\n    }\n\n    componentDidCatch(err,info){\n        this.setState({\n            error:true,\n        })\n    }\n\n    render(){\n        if(this.state.prop){\n            return <ErrorMessage/>\n        }\n        return this.props.children;\n    }\n\n\n}\n\nexport default ErrorBoundary;\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState,useEffect} from 'react';\nimport useMarvelService from '../../services/MarverServices';\nimport Spinner       from '../spinner/spinner';\nimport ErrorMessage  from '../errorMessage/errorMessage';\nimport Skeleton      from '../skeleton/Skeleton';\nimport PropTypes     from 'prop-types'\nimport './charInfo.scss';\n\n\nconst CharInfo = (props) => {\n\n    const [char,setChar] = useState(null);\n\n    const {loading,error,getCharacter,clearError} = useMarvelService();\n\n    useEffect(()=>{\n        updateChar();\n    },[props.charId])\n\n    const updateChar = () => {\n        \n        const {charId} = props;\n\n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded);\n    }\n\n      \n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n    const skeleton     = char || loading || error ? null : <Skeleton/> ;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner      = loading ? <Spinner/> : null ;\n    const content      = !(loading || error || !char) ? <View char={char}/>  : null;\n\n    return (\n        <div className=\"char__info\">\n           {skeleton}\n           {errorMessage}\n           {spinner}\n           {content}\n        </div>\n    )\n }\n\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <>\n             <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    \n                    comics.map((item,i)=>{\n                        //eslint-disable-next-line\n                        if(i > 9) return;\n                        \n                        return(\n                            <li key={i} className='char__comics-item'>\n                                {item.name}\n                            </li>\n                        )\n\n                    })\n                }\n                \n                             \n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;\n\n\n\n","import RandomChar    from \"../randomChar/RandomChar\";\nimport CharList      from \"../charList/CharList\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration    from '../../resources/img/vision.png';\nimport CharInfo      from \"../charInfo/CharInfo\";\nimport { useState }  from \"react\";\n\nconst MainPage = () => {\n\n    const [selectedChar,setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n\n        setChar(id);\n    }\n    return(\n        <>\n        <ErrorBoundary>\n            <RandomChar/>\n        </ErrorBoundary>\n        <div className=\"char__content\">\n            <ErrorBoundary>\n                <CharList onCharSelected={onCharSelected}/>\n            </ErrorBoundary>\n            <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n            </ErrorBoundary>\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","import './singleComic.scss';\nimport {useState,useEffect} from 'react';\nimport useMarvelService     from '../../services/MarverServices';\nimport Spinner              from '../spinner/spinner';\nimport ErrorMessage         from '../errorMessage/errorMessage';\nimport PropTypes            from 'prop-types';\nimport {Link}               from 'react-router-dom';\nimport ComicsList           from '../comicsList/ComicsList';\n\n\nconst SingleComic = (props) => {\n\n    const [comics,setComics] = useState(null);\n\n    const {loading,error,getComics,clearError} = useMarvelService();\n\n\n    useEffect(()=>{\n        updateComics();\n    },[props.comicsId])\n\n\n    const updateComics = () => {\n        \n        const {comicsId} = props;\n\n        if (!comicsId) {\n            return;\n        }\n        clearError();\n        getComics(comicsId)\n            .then(onComicsLoaded);\n    }\n\n\n    const onComicsLoaded = (comics) => {\n        setComics(comics);\n    }\n\n    \n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner      = loading ? <Spinner/> : null ;\n    const content      = !(loading || error || !comics) ? <View comics={comics}/>  : null;\n\n    \n\n    return (\n        <div className=\"comics__info\">\n           {errorMessage}\n           {spinner}\n           {content}\n        </div>\n    )\n }\n\n    const View = ({comics}) => {\n\n        const {title, description, thumbnail, language, price ,pageCount} = comics;\n\n       \n        return(\n            <>\n            \n            <div className=\"single-comic\">\n                    <img src={thumbnail} alt={title} className='single-comic'/>\n                    <div className=\"single-comic__info\">\n                    <h2 className=\"single-comic__name\">{title}</h2>\n                        <p className=\"single-comic__descr\">{description}</p>\n                        <p className=\"single-comic__descr\">{pageCount}</p>\n                        <p className=\"single-comic__descr\">{language}</p>\n                    <div className=\"single-comic__price\">{price}</div>\n                </div>\n                    <Link  to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n            </div>   \n\n            </>\n        );\n    }\n\n    SingleComic.propTypes = {\n        comicsId: PropTypes.number\n    }\n\nexport default SingleComic;\n\n\n\n\n\n\n\n\n   \n\n      \n\n\n\n\n\n\n","import ErrorMessage    from \"../errorMessage/errorMessage\";\nimport {Link}          from \"react-router-dom\";\nconst Page404 = () => {\n    return(\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign':'center','fontWeight':'bold','fontSize':'24px'}}>Page doesn`t exist</p>\n            <Link  to='/' style={{'display':'block','textAlign':'center','fontWeight':'bold','fontSize':'24px','marginTop':'30px'}}>Back to main page</Link>\n        </div>\n    )\n}\n\nexport default Page404;","import React        from \"react\";\nimport {BrowserRouter as Router,Route,Routes} from 'react-router-dom'\nimport AppHeader from \"../appHeader/AppHeader\";\nimport { MainPage, ComicsList,SingleComic,Page404} from \"../pages\";\nimport { useState } from \"react\";\n\n    \nconst App = () => {\n\n    const [selectedComics,setComics] = useState(null);\n\n\n    const onComicsSelected = (id) => {\n\n        setComics(id);\n\n    }\n\n    return (\n    <Router>\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n               <Routes>\n\n        <Route  path='/' element={<MainPage/>}/>\n\n        <Route  path='/comics' element={<ComicsList onComicsSelected={onComicsSelected}/>}/>\n\n        <Route  path='/single' element={<SingleComic comicsId={selectedComics}/>}/>\n\n        <Route path=\"*\" element={<Page404 />}/>\n            \n       \n\n              </Routes>\n            </main>\n        </div>\n    </Router>\n    )\n}\n\n\n\n  \n\nexport default App;","import React         from 'react';\nimport ReactDOM      from 'react-dom';\nimport App           from './components/app/App';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}